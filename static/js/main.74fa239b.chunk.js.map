{"version":3,"sources":["reducers/portfolioReducer.js","providers/portfolioProvider.js","providers/windowDimensionsProvider.js","components/ResponsiveLayout/index.js","hooks/useWindowDimensions.js","components/MobileView/index.js","components/Resume/index.js","components/SocialMedia/index.js","components/Contact/index.js","components/Intro/index.js","components/NavBar/index.js","components/Projects/index.js","components/DesktopView/index.js","components/Content/index.js","App.js","serviceWorker.js","index.js"],"names":["portfolioReducer","state","action","type","todoItems","Error","PortfolioProvider","React","createContext","Provider","WindowDimensionsContext","WindowDimensionsProvider","children","useState","width","window","innerWidth","height","innerHeight","dimensions","setDimensions","useEffect","handleResize","addEventListener","removeEventListener","value","ResponsiveLayout","breakpoint","renderMobile","renderDesktop","useContext","MobileView","className","Resume","resume","Container","Button","variant","href","target","SocialMedia","name","url","icon","medias","map","media","key","rel","size","color","undefined","contacts","contact","Intro","y","NavBar","buttons","fluid","data-spy","data-offset-top","button","Projects","DesktopView","Content","library","add","fab","faPhoneAlt","faAt","initialState","App","store","useReducer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.74fa239b.chunk.js","sourcesContent":["export const portfolioReducer = (state, action) => {\n    switch (action.type) {\n        case 'OPEN_REPOSITORY':\n            return {\n                ...state,\n                todoItems: [...state.todoItems, action.todoItems]\n            };\n        default:\n            throw new Error('Unexpected action');\n    }\n}","import React from 'react';\n\nexport const PortfolioContext = React.createContext({});\nexport const PortfolioProvider = PortfolioContext.Provider;","import React, { useEffect, useState, } from 'react'\n\nexport const WindowDimensionsContext = React.createContext(null);\nexport const WindowDimensionsProvider = ({children}) => {\n    const [dimensions, setDimensions] = useState({\n        width: window.innerWidth,\n        height: window.innerHeight\n    })\n\n    useEffect(()=> {\n        const handleResize = () => {\n            setDimensions({\n                width: window.innerWidth,\n                height: window.innerHeight\n            })\n        }\n        window.addEventListener('resize', handleResize)\n        return () => {window.removeEventListener('resize', handleResize)}\n    }, []);\n\n    return (\n        <WindowDimensionsContext.Provider value={dimensions}>\n            {children}\n        </WindowDimensionsContext.Provider>\n    )\n}","import { useWindowDimensions } from '../../hooks/useWindowDimensions'\n\nconst ResponsiveLayout = ({breakpoint, renderMobile, renderDesktop }) =>{\n   \n    const {width} = useWindowDimensions()\n    return (width > breakpoint ? renderDesktop() : renderMobile())\n\n}\n\nexport default ResponsiveLayout","import {useContext} from 'react';\nimport { WindowDimensionsContext } from \"../providers/windowDimensionsProvider\";\n\nexport const useWindowDimensions = () => {\n    return useContext(WindowDimensionsContext);\n}","import React from 'react'\n\nconst MobileView = (/* {  variables  } */) => (\n  <div className='homepage'>\n    \n  </div>\n)\n\nexport default MobileView","import React, { useState } from 'react';\nimport { Container, Button } from 'react-bootstrap'\n\n// custom css styles\n\n\nconst Resume = () => {\n    const [resume, ] = useState('https://linktopdf.com')\n\n    return (\n        <Container className='resume'>\n            <Button variant=\"outline-light\" href={resume} target='_blank'>\n                Resume\n            </Button>\n        </Container>\n    )\n}\n\nexport default Resume","import React, { useState } from 'react';\nimport { Container } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// custom css styles\nimport './index.scss'\n\nconst SocialMedia = () => {\n\n    const [medias, ] = useState([\n        {\n            name: 'linkedin',\n            url: 'https://www.linkedin.com/in/murilo-f-schaefer', //linkedin\n            icon: ['fab', 'linkedin-in']\n        },\n        {\n            name: 'github',\n            url: 'https://github.com/MuriloSchaefer', //github\n            icon: ['fab', 'github']\n        },\n        {\n            name: 'kaggle',\n            url: 'https://www.kaggle.com/muriloschaefer', //kaggle\n            icon: ['fab', 'kaggle']\n        },\n        {\n            name: 'facebook',\n            url: 'https://www.facebook.com/murilo.franciscoschaefer', //facebook\n            icon: ['fab', 'facebook']\n        },\n    ]);\n\n    return (\n        <Container className='socialMedia-root'>\n            <ul className='socialMedia-list'>\n                { medias.map(media => (\n                    <li className='socialMedia-item' key={media.name}>\n                        <a href={media.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                            <FontAwesomeIcon icon={media.icon} size=\"lg\" color='white'/>\n                        </a> \n                    </li>\n                )) }\n            </ul>\n        </Container>\n    )\n}\n\nexport default SocialMedia","import React, { useState } from 'react';\nimport { Container } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n\n// custom css styles\nimport './index.scss'\n\n\nconst Resume = () => {\n\n    const [contacts, ] = useState([\n        {\n            name: 'phone',\n            value: '+55 45 998 338 031',\n            icon: 'phone-alt',\n            url: undefined\n        },{\n            name: 'mail',\n            value: 'murilo.schaefer@gmail.com',\n            icon: 'at',\n            url: undefined\n        }\n    ])\n\n    return (\n        <Container className='contact-root'>\n            <ul className='contact-list'>\n                { contacts.map(contact => (\n                    <li className='contact-item' key={contact.name}>\n                        <a href={contact.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                            <FontAwesomeIcon icon={contact.icon} color='white'/> {contact.value}\n                        </a> \n                    </li>\n                )) }\n            </ul>\n        </Container>\n    )\n}\n\nexport default Resume","import React from 'react';\n//import style from './header.scss';\nimport { Parallax } from 'react-scroll-parallax';\nimport { Container } from 'react-bootstrap'\nimport Resume from '../Resume';\nimport SocialMedia from '../SocialMedia';\nimport Contact from '../Contact'\n\n// custom css styles\nimport './index.scss'\n\nconst Intro = () => {\n    return (\n        <div className='root'>\n            <div className='container'>\n                {/* <canvas className='canvas' id='canvas'/> */} \n                <Parallax\n                    y={[-100, 100]}\n                    className='info'\n                >\n                    <Container>\n                        <h1>Have you met <span className='name'>Murilo Schaefer</span>?</h1>\n                        <h2>a Fullstack developer and data scientist</h2>\n                        <Resume />\n                        <SocialMedia />\n                        <Contact  />\n                    </Container>\n                </Parallax>\n            </div>\n            <p className='scroll'>Scroll to see the projects</p>\n        </div>\n    )\n}\n\nexport default Intro","import React, { useState } from 'react'\nimport {Container} from 'react-bootstrap'\n\n// custom css\nimport './index.scss'\n\nconst NavBar = () => {\n    const [buttons, ] = useState([\n        {\n            name: 'top',\n            url: '#intro',\n            icon: 'arrow-up',\n            value: 'Top'\n        },{\n            name: 'projects',\n            url: '#projects',\n            icon: 'arrow-up',\n            value: 'Projects'\n        },{\n            name: 'publications',\n            url: '#Publications',\n            icon: 'arrow-up',\n            value: 'Publications'\n        },{\n            name: 'more',\n            url: '#More',\n            icon: 'arrow-up',\n            value: 'More'\n        },\n    ])\n    return (\n        <Container className=\"navbar-container\" fluid data-spy=\"affix\" data-offset-top=\"205\">\n            <ul className=\"navbar\">\n                { buttons.map(button => (\n                    <li className=\"navbar-item\" key={button.name}>{button.value}</li>\n                ))}\n            </ul>\n        </Container>\n    )\n}\nexport default NavBar","import React from 'react';\nimport { Container } from 'react-bootstrap'\n\n// custom css styles\nimport './index.scss'\n\n\nconst Projects = () => {\n\n    return (\n        <Container className='projects' fluid>\n            \n        </Container>\n    )\n}\n\nexport default Projects","import React from 'react'\nimport Intro from '../Intro'\nimport NavBar from '../NavBar'\nimport Projects from '../Projects'\n\nconst DesktopView = (/* { variables } */) => {\n  //const { width } = useWindowDimensions()\n  return (\n    <div className=\"homepage\">\n        <Intro />\n        <NavBar />\n        <Projects />\n        {/*\n        <Publications />\n        <MoreAbout />\n        <Contact /> */}\n        {/* another component maybe: \"who am I?\" */}\n    </div>\n  )\n}\nexport default DesktopView","import React from 'react'\nimport ResponsiveLayout from '../ResponsiveLayout'\nimport MobileView from '../MobileView'\nimport DesktopView from '../DesktopView'\n\nconst Content = (/* { variables  } */) => (\n  <ResponsiveLayout\n    breakpoint={740}\n    renderDesktop={() => (\n      <DesktopView /* variables */ />\n    )}\n    renderMobile={() => (\n      <MobileView /* variable */ />\n    )}\n  />\n)\n\nexport default Content","import React, { useReducer } from 'react';\nimport { portfolioReducer } from './reducers/portfolioReducer';\nimport { PortfolioProvider } from './providers/portfolioProvider';\nimport { WindowDimensionsProvider } from './providers/windowDimensionsProvider';\nimport Content from './components/Content';\nimport { ParallaxProvider } from 'react-scroll-parallax';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { faPhoneAlt, faAt } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(fab, faPhoneAlt, faAt)\n\n// CSS libraries\n//import 'bulma/css/bulma.css'\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\nconst initialState = {\n};\n\nconst App = () => {\n  const store = useReducer(portfolioReducer, initialState);\n  return (\n    <WindowDimensionsProvider>\n      <ParallaxProvider>\n        <div className=\"App\">\n        <PortfolioProvider value={store}>\n          <Content /* variables */ />\n        </PortfolioProvider>\n        </div>\n      </ParallaxProvider>      \n    </WindowDimensionsProvider>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}